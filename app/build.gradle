apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'
apply plugin: 'kotlin-kapt'


sonarqube {
    androidVariant 'debug'

    properties {
        property "sonar.verbose", true
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "100f189c653fcceba4632025e01f803f3eaf468f"

        property "sonar.projectKey", "astroidnu_RijksMuseum"
        property "sonar.organization", "astroidnu-github"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.junit.reportsPath", "$buildDir/reports/jacocoTestReport"
        property "sonar.issuesReport.html.enable", "true"
        property "sonar.issuesReport.console.enable", "true"
        property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacocoTestReport/jacocoTestReport.xml" //link to xml file that generated by jacoco
        property 'sonar.coverage.exclusions', "**/*Activity*.*,**/*Activity.*," +
                "**/*Router.**,**/*Module.**," +
                "**/*App.**," +
                "**/BaseViewModel.**," +
                "**/*Interactor.**," +
                "**/ScreenRouterImpl.**," +
                "**/RestConstant.**," +
                "**/AppConstants.**," +
                "**/AppContextCoroutineProvider.**"
    }
}


jacoco {
    toolVersion = "0.8.2"
    reportsDir = file("$buildDir/reports")
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    // what to exclude from coverage report
    // UI, "noise", generated classes, platform classes, etc.
    def fileFilter = [
            '**/*Parcel.class',
            '**/*$CREATOR.class',
            '**/*Test*.*',
            '**/AutoValue_*.*',
            '**/*JavascriptBridge.class',
            '**/R.class',
            '**/R$*.class',
            '**/Manifest*.*',
            'android/**/*.*',
            '**/BuildConfig.*',
            '**/*$ViewBinder*.*',
            '**/*$ViewInjector*.*',
            '**/Lambda$*.class',
            '**/Lambda.class',
            '**/*Lambda.class',
            '**/*Lambda*.class',
            '**/*$InjectAdapter.class',
            '**/*Activity.class',
            '**/*Activity*.*',
            '**/*Contract.class',
            '**/*Module.class',
            '**/*Router.class',
            '**/*App.class',
            '**/*App*.class',
            '**/*VO.class',
            '**/data/response/*.*',
            '**/RestConstant.class',
            '**/AppConstants.*',
            '**/AppContextCoroutineProvider.*',
            '**/BaseViewModel.*',
            '**/ScreenRouterImpl.class',
            '**/*Router.class',
            '**/presentation/BaseNavigationDrawerActivity.class',
            '**/presentation/ScreenRouterImpl.class',
            '**/usecase/*.*',
            '**/SplashScreenPresenter.class',
            '**/*Builder.class',
            '**/*$ModuleAdapter.class',
            '**/*$ViewInjector*.class',
            '**/*_MembersInjector.class', //Dagger2 generated code
            '*/*_MembersInjector*.*', //Dagger2 generated code
            '**/*_*Factory*.*', //Dagger2 generated code
            '**/*Component*.*', //Dagger2 generated code
            '**/*Module*.*' //Dagger2 generated code
    ]

    def mainSrc = "${project.projectDir}/src/test/java"
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)

    sourceDirectories = files([mainSrc])

    // generated classes
    classDirectories = files([debugTree], [kotlinDebugTree])

    // sources
    executionData = files("$buildDir/jacoco/testDebugUnitTest.exec")
}


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.scoproject.rijksmuseum"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

kapt {
    generateStubs = false
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Testing Dependencies
    testImplementation 'junit:junit:4.12'

    // Android runner and rules support
    androidTestImplementation(androidRunner) {
        exclude module: 'support-annotations'
    }
    androidTestImplementation(androidRules) {
        exclude module: 'support-annotations'
    }

    // Espresso support
    androidTestImplementation(espressoDependencies.espressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    // add this for intent mocking support
    androidTestImplementation(espressoDependencies.espressoIntents) {
        exclude module: 'support-annotations'
    }

    // add this for webview testing support
    androidTestImplementation espressoDependencies.espressoWeb
    androidTestImplementation mockito
    testImplementation mockito
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.9.1'

    //Kotlin Dependencies Kapt
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31"


    //Implementation base module
    implementation project(':base')

    //Support Dependencies
    implementation supportDependencies.appcompatv7
    implementation supportDependencies.design
    implementation supportDependencies.supportv4
    implementation supportDependencies.recycleview
    implementation supportDependencies.cardview
    implementation supportDependencies.customtabs
    implementation supportDependencies.contraintLayout
    implementation supportDependencies.multidex

    //Retrofit Dependencies
    implementation retrofitDependencies.retrofit
    implementation retrofitDependencies.converterGson

    //Okhttp Dependencies
    implementation okhttpDependencies.okhttp
    implementation okhttpDependencies.loggingInterceptor

    //Dagger Dependencies
    implementation daggerDependencies.dagger
    implementation daggerDependencies.daggerAndroidSupport
    implementation daggerDependencies.daggerAndroid
    kapt daggerDependencies.daggerCompiler
    kapt daggerDependencies.daggerAndroidProcessor

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'

    //objectBox
    debugImplementation "io.objectbox:objectbox-android-objectbrowser:$objectBoxVersion"
    releaseImplementation "io.objectbox:objectbox-android:$objectBoxVersion"
    implementation objectBoxDependencies.objectboxKotlin
    kapt objectBoxDependencies.objectBoxProcessor

    //Circular ImageView
    implementation 'de.hdodenhof:circleimageview:3.0.0'
}

apply plugin: 'io.objectbox'